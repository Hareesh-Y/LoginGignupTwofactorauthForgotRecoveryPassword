package com.cryp.harsh.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RestController;

import com.cryp.harsh.domain.VerificationType;
import com.cryp.harsh.model.User;
import com.cryp.harsh.service.EmailService;
import com.cryp.harsh.service.UserService;

@RestController
public class UserController {
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private EmailService emailService;

	private String jwt;
	
	
	@GetMapping("/api/users/profile")
	
	public ResponseEntity<User> getUserProfile(@RequestHeader("Autherization") String jwt) throws Exception{
	
	User user = userService.findUserProfileByJwt(jwt);
	
	return new ResponseEntity<User>(user, HttpStatus.OK);
	
	}
	
	
	@PostMapping("/api/users/verificationType/{send-otp}")
	public ResponseEntity<User> sendVerificationOtp(
		@RequestHeader("Autherization") String jwt, @PathVariable VerificationType verificationType) throws Exception{
	
	User user = userService.findUserProfileByJwt(jwt);
	
	return new ResponseEntity<User>(user, HttpStatus.OK);
	
	}
	
	
	@PatchMapping("/api/users/enable-two-factor/verify-otp/{otp}")
	public ResponseEntity<User> enableTwoFactorAuthentication(@RequestHeader("Autherization") ) throws Exception{
	
	User user = userService.findUserProfileByJwt(jwt);
	
	return new ResponseEntity<User>(user, HttpStatus.OK);
	
	}
	
}
